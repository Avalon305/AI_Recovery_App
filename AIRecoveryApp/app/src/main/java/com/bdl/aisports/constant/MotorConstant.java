package com.bdl.aisports.constant;

import android.net.wifi.aware.PublishConfig;
import android.view.ViewDebug;

public class MotorConstant {


    // TODO 限制 × 4856

    /**
     * 初始参数
     */
    public static final int speed = 3500; //返回速度
    public static final int initSpeed = 500; //非运动状态的速度
    public static final int MIN_BACK_TORQUE = 2000; //能使力力臂返回的最小力矩
    public static final int DIF_BETWEEN_NEG_TORQUE_AND_BOUNCE = 1000; //初始反弹力与正常返回力矩的差值
    public static final int MIN_KEEP_ARM_TORQUE = 1500; //
    /**
     * 获取电机输出力矩
     */
    public static final byte[] READ_TORQUE = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            0x38, 0x00, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 获取实时位置
     */
    public static final byte[] READ_ACTUAL_LOCATION = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            (byte) 0xBA, 0x04, 0x00, 0x00,
            0x03, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 获取电机转速
     */
    public static final byte[] READ_ROTATIONAL_SPEED = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            0x33, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 获取电机实时功率
     */
    public static final byte[] READ_POWER = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            (byte) 0xD4, 0x03, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 读取状态位
     */
    public static final byte[] READ_STATE = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            (byte) 0x96, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置正向力矩限制
     */
    public static final byte[] SET_POSITIVE_TORQUE_LIMITED1 = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0x8B, 0x03, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置正向力矩限制
     */
    public static final byte[] SET_POSITIVE_TORQUE_LIMITED = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 读取正向力矩限制
     */
    public static final byte[] READ_POSITIVE_TORQUE_LIMITED = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置反向力矩限制
     */
    public static final byte[] SET_NEGATIVE_TORQUE_LIMITED = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 读取反向力矩限制
     */
    public static final byte[] READ_NEGATIVE_TORQUE_LIMITED = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置最大力矩
     */
    public static final byte[] SET_MAX_TORQUE = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x05, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置初始回弹力
     */
    public static final byte[] SET_INITIAL_BOUNCE = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x06, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置保持力臂所需力矩
     */
    public static final byte[] SET_KEEP_ARM_TORQUE = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x08, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置最大力矩
     */
    public static final byte[] SET_PUSH_TORQUE = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xDC, 0x01, 0x00, 0x00,
            0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };


    /**
     * 设置去程初始速度
     */
    public static final byte[] SET_GOING_SPEED = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x03, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置比较速度一般和上一个参数结合使用
     */
    public static final byte[] SET_COMPARE_SPEED = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x07, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 设置返程初始速度
     */
    public static final byte[] SET_BACK_SPEED = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00,
            (byte) 0xD8, 0x01, 0x00, 0x00,
            0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * OperationMode寻零模式
     */
    public static final byte[] OPERATION_MODE = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x05, 0x00,
            (byte) 0xD6, 0x01, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * HomingStartStop
     */
    public static final byte[] HOMING_START_STOP = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x05, 0x00,
            (byte) 0xD6, 0x01, 0x00, 0x00,
            0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * OperationMode寻零模式
     */
    public static final byte[] READ_OPERATION_MODE = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x05, 0x00,
            (byte) 0xD6, 0x01, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * HomingStartStop
     */
    public static final byte[] READ_HOMING_START_STOP = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x05, 0x00,
            (byte) 0xD6, 0x01, 0x00, 0x00,
            0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 第一次开机的时候上使能
     */
    public static final byte[] MOTOR_ENABLE = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x05, 0x00,
            (byte) 0xD6, 0x01, 0x00, 0x00,
            0x05, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 开启等速模式
     */
    public static final byte[] EQUAL_SPEED_MODE = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x05, 0x00,
            (byte) 0xD6, 0x01, 0x00, 0x00,
            0x03, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 复位
     */
    public static final byte[] FAIL_RESET = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x05, 0x00,
            (byte) 0xD6, 0x01, 0x00, 0x00,
            0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };


    /**
     * 前方限制
     */
    public static final byte[] SET_FRONTLIMIT = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x03, 0x00,
            (byte) 0xDA, 0x01, 0x00, 0x00,
            0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 后方限制
     */
    public static final byte[] SET_REARLIMIT = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x03, 0x00,
            (byte) 0xDA, 0x01, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 提前限位的值
     */
    public static final byte[] SET_LEADS = {
            0x01, (byte) 0x83, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x03, 0x00,
            (byte) 0xDA, 0x01, 0x00, 0x00,
            0x06, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * 当前力矩限制
     */
    public static final byte[] READ_TORQUE_LIMITED = {
            0x01, (byte) 0x82, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,
            (byte) 0x3E, 0x03, 0x00, 0x00,
            0x29, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };


}
